---
- include_role:
    name: base

- name: "Create cluster {{ cluster_full_name }}"
  shell: >
    kops create cluster {{ cluster_full_name }}
    --cloud-labels="Team=MyTeam"
    --admin-access=<to be changed>/32
    --kubernetes-version={{ kube_version | quote }}
    --zones={{ aws_zones | quote }}
    --dns-zone={{ dns_zone | default('') | quote }}
    --master-count={{ master_count | quote }}
    --master-size={{ master_size | quote }}
    --master-volume-size={{ master_volume_size | quote }}
    --cloud=aws
    --output yaml
    --state=s3://{{ kops_state_bucket | quote }}
    --node-size={{ node_size | quote }}
    --node-count={{ nodes_count | quote }}
    --node-volume-size={{ node_volume_size | quote }}
    --topology=public
    --encrypt-etcd-storage
    --networking=canal

- name: "Apply extra confs on cluster"
  shell: >
    ./utils/genClusterConfig.py
    --cluster-name={{ cluster_full_name }}
    --cluster-state=s3://{{ kops_state_bucket | quote }}
    --conf-path=cluster.conf.d
    --output=./tmp-{{ cluster_full_name }}.yaml
    &&
    kops replace --name {{ cluster_full_name }} --state=s3://{{ kops_state_bucket | quote }} -f ./tmp-{{ cluster_full_name }}.yaml
    &&
    rm -f ./tmp-{{ cluster_full_name }}.yaml

- name: "Apply extra confs on nodes"
  shell: >
    ./utils/genClusterConfig.py
    --cluster-name={{ cluster_full_name }}
    --cluster-state=s3://{{ kops_state_bucket | quote }}
    --conf-path=nodes.conf.d
    --component=ig
    --output=./tmp-{{ cluster_full_name }}-nodes.yaml
    &&
    kops replace --name {{ cluster_full_name }} --state=s3://{{ kops_state_bucket | quote }} -f ./tmp-{{ cluster_full_name }}-nodes.yaml
    &&
    rm -f ./tmp-{{ cluster_full_name }}-nodes.yaml

- name: "Apply extra confs on master"
  shell: >
    ./utils/genClusterConfig.py
    --cluster-name={{ cluster_full_name }}
    --cluster-state=s3://{{ kops_state_bucket | quote }}
    --conf-path=master.conf.d
    --component=master-{{ item }}
    --output=./tmp-{{ cluster_full_name }}-master-{{ item }}.yaml
    &&
    kops replace --name {{ cluster_full_name }} --state=s3://{{ kops_state_bucket | quote }} -f ./tmp-{{ cluster_full_name }}-master-{{ item }}.yaml
    &&
    rm -f ./tmp-{{ cluster_full_name }}-master-{{ item }}.yaml

  with_items: "{{ aws_zones.split(',') }}"
  loop_control:
    index_var: index
  when: index < master_count

- name: "Apply plan creation for cluster {{ cluster_name }}"
  shell: >
    kops update cluster
    --name {{ cluster_full_name }}
    --state=s3://{{ kops_state_bucket | quote }}
    --yes
